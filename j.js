"use strict";var todo=["redo","touch","other shapes Ellipse <ellipse> Polyline <polyline> Polygon <polygon>","edit (like click, change color)","save","load","dont draw when currentlyDrawing is null","resize","refractor ens funktionalitet","fontawesome icons","butt | round | square - stroke-linecap:round;","draw funktioner ud i separat module"],menuLinks=document.querySelectorAll("#menu a[data-what]"),actionLinks=document.querySelectorAll("#menu a[data-action]"),svg=document.querySelector("#canvas"),colorInputFill=document.querySelector("#menu input#fill"),colorInputStroke=document.querySelector("#menu input#stroke"),transparentFill=document.querySelector("#menu #transparentFill"),transparentStroke=document.querySelector("#menu #transparentStroke"),strokeWidthInput=document.querySelector("#menu #strokeWidth");svg.style.width=window.innerWidth-150,svg.style.height=window.innerHeight;var currentlyDrawing=null,currentFill="black",currentStroke="black",strokeWidth=strokeWidthInput.value,coords={start:{x:null,y:null}},path=[],drawHistory=[],current=null,mouseIsDown=!1;colorInputFill.addEventListener("change",function(a){currentFill=a.target.value}),colorInputStroke.addEventListener("change",function(a){currentStroke=a.target.value}),strokeWidthInput.addEventListener("change",function(a){strokeWidth=a.target.value}),transparentFill.addEventListener("change",function(a){a.target.checked?(colorInputFill.setAttribute("disabled","true"),currentFill="transparent"):(colorInputFill.removeAttribute("disabled"),currentFill=colorInputFill.value)}),transparentStroke.addEventListener("change",function(a){a.target.checked?(colorInputStroke.setAttribute("disabled","true"),currentStroke="transparent"):(colorInputStroke.removeAttribute("disabled"),currentStroke=colorInputStroke.value)}),menuLinks.forEach(function(a){a.addEventListener("click",function(b){menuLinks.forEach(function(c){c.classList.remove("chosen")}),b.target.classList.add("chosen"),currentlyDrawing=b.target.dataset.what})}),actionLinks.forEach(function(a){a.addEventListener("click",function(){switch(a.dataset.action){case"undo":var c=drawHistory.pop();c.remove();}})});function startRect(){current.setAttribute("x",coords.start.x),current.setAttribute("y",coords.start.y),current.setAttribute("width",0),current.setAttribute("height",0)}function updateRect(a){a.clientX<coords.start.x?(current.setAttribute("x",a.clientX),current.setAttribute("width",coords.start.x-a.clientX)):current.setAttribute("width",a.clientX-coords.start.x),a.clientY<coords.start.y?(current.setAttribute("y",a.clientY),current.setAttribute("height",coords.start.y-a.clientY)):current.setAttribute("height",a.clientY-coords.start.y)}function startCircle(){current.setAttribute("cx",coords.start.x),current.setAttribute("cy",coords.start.y),current.setAttribute("r",0)}function updateCircle(a){var b=Math.abs(coords.start.x-a.clientX),c=Math.abs(coords.start.y-a.clientY);b>c?current.setAttribute("r",b):current.setAttribute("r",c)}function startLine(){current.setAttribute("x1",coords.start.x),current.setAttribute("y1",coords.start.y),current.setAttribute("x2",coords.start.x),current.setAttribute("y2",coords.start.y)}function updateLine(a){current.setAttribute("x2",a.clientX),current.setAttribute("y2",a.clientY)}function startPath(){current.setAttribute("d","")}function updatePath(a){path.push([a.clientX,a.clientY]);var b,c="M ";for(b=0;b<path.length;b++)c+=path[b][0]+" "+path[b][1]+" ";current.setAttribute("d",c)}svg.addEventListener("mousedown",function(a){mouseIsDown=!0,coords.start.x=a.clientX,coords.start.y=a.clientY,current=document.createElementNS("http://www.w3.org/2000/svg",currentlyDrawing),current.setAttribute("fill",currentFill),current.setAttribute("stroke",currentStroke),current.setAttribute("stroke-width",strokeWidth);"rect"===currentlyDrawing?startRect(a):"circle"===currentlyDrawing?startCircle(a):"line"===currentlyDrawing?startLine(a):"path"===currentlyDrawing?startPath(a):void 0;svg.appendChild(current)}),svg.addEventListener("mousemove",function(a){mouseIsDown&&("rect"===currentlyDrawing?updateRect(a):"circle"===currentlyDrawing?updateCircle(a):"line"===currentlyDrawing?updateLine(a):"path"===currentlyDrawing?updatePath(a):void 0)}),svg.addEventListener("mouseup",function(){mouseIsDown=!1;var b=current.cloneNode(!0);svg.appendChild(b),drawHistory.push(b),current.remove(),current=null,path=[]});
